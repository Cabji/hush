event(OnKVIrcStartup,hush)
{
	# create the hush main object
	if ($objects.exists(%G_hush))
		halt;
	
	%G_hush = $new(hush::main, 0, hushMain)
	# create child objects/widgets
	%G_hush->%channels 			= $new(hush::channels, 		0,				"Hush Channels Widget")
	%G_hush->%common 			= $new(hush::common, 			0,				"Hush Common Functions")
	%G_hush->%instantsearch	 	= $new(hush::instantsearch, 	0,				"Hush Instant Search Widget")
	%G_hush->%library 			= $new(hush::library, 		0,				"Hush Library Object")
	%G_hush->%libraryoptions	 	= $new(hush::libraryoptions, 	0,				"Hush Library Widget")
	%G_hush->%options 			= $new(hush::options, 		0,				"Hush Options Widget")
	%G_hush->%queueeditor		 	= $new(hush::queueeditor, 		0,				"Hush Download Queue Widget")
	%G_hush->%searches 			= $new(hush::searches, 		0,				"Hush Searches Widget")
	%G_hush->%searchesImport 		= $new(hush::searchesimport, 	0, 				"Hush Searches Import Widget")
	%G_hush->%sport				= $new(hush::sport,			0, 				"Hush Sport Widget")
	%G_hush->%sport->%objSportUI	= $new(hush::sportobject,		%G_hush->%sport,	"Hush SportObject")
	
	%G_hush->%library->$scanLibrary()
	%G_hush->$buildPSQuery()
	
	// activate timers
	if (%G_hushOptions{"ISPSToggle"})	{%G_hush->$timerPassiveSearch();}
	if (%G_hushOptions{"SearchImportsAutoToggle"})
	{
		%G_hush->%searchImportsAutoFlag = $true; 
		%G_hush->$timerSearchImportsAutoAcquisition();
		# hard coded to use imdb calendar for the automated movie title acquisition
		# the fetchResults function is called here on startup because some users may not have kvirc running all the time 
		# so we will do an automatic movie title fetch on startup to catch those users.
		if (%G_hush->%debug) {debug -c Doing a one-shot automatic movie title fetch on start up...;}
		%G_hush->%searchesImport->$fetchResults("https://imdb.com/calendar","IMDB Calendar")
	}
	%G_hush->$timerSearchImportsAutoPurge()
	
	# enable event handlers to ensure Hush operates correctly.
	eventctl -e OnQueryNotice hushErrorHandler
}

